(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{GndG:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgxEchartsService } from 'ngx-echarts';\nimport { CODE_JSON } from './code';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-bus-line',\n  templateUrl: './bus-line.component.html',\n  styleUrls: ['./bus-line.component.scss']\n})\nexport class BusLineComponent implements OnInit {\n  demo_html = require('!!html-loader!./bus-line.component.html');\n  demo_ts = require('!!raw-loader!./bus-line.component.ts');\n  demo_json = CODE_JSON;\n\n  // show loading spinner:\n  mapLoaded = false;\n  // empty option before geoJSON loaded:\n  options = {};\n\n  constructor(private http: HttpClient, private es: NgxEchartsService) { }\n\n  ngOnInit() {\n    // fetch map geo JSON data from server\n    this.http.get('assets/data/lines-bus.json')\n      .subscribe((data: any[]) => {\n        // processing data:\n        const hStep = 300 / (data.length - 1);\n        const busLines = [].concat.apply([], data.map((busLine, idx) => {\n          let prevPt;\n          const points = [];\n          for (let i = 0; i < busLine.length; i += 2) {\n            let pt = [busLine[i], busLine[i + 1]];\n            if (i > 0) {\n              pt = [\n                prevPt[0] + pt[0],\n                prevPt[1] + pt[1]\n              ];\n            }\n            prevPt = pt;\n\n            points.push([pt[0] / 1e4, pt[1] / 1e4]);\n          }\n          return {\n            coords: points,\n            lineStyle: {\n              normal: {\n                color: this.es.echarts.color.modifyHSL('#5A94DF', Math.round(hStep * idx))\n              }\n            }\n          };\n        }));\n        // hide loading:\n        this.mapLoaded = true;\n        // update options:\n        this.options = {\n          bmap: {\n            center: [116.46, 39.92],\n            zoom: 10,\n            roam: true,\n            mapStyle: {\n              'styleJson': [\n                {\n                  'featureType': 'water',\n                  'elementType': 'all',\n                  'stylers': {\n                    'color': '#031628'\n                  }\n                },\n                {\n                  'featureType': 'land',\n                  'elementType': 'geometry',\n                  'stylers': {\n                    'color': '#000102'\n                  }\n                },\n                {\n                  'featureType': 'highway',\n                  'elementType': 'all',\n                  'stylers': {\n                    'visibility': 'off'\n                  }\n                },\n                {\n                  'featureType': 'arterial',\n                  'elementType': 'geometry.fill',\n                  'stylers': {\n                    'color': '#000000'\n                  }\n                },\n                {\n                  'featureType': 'arterial',\n                  'elementType': 'geometry.stroke',\n                  'stylers': {\n                    'color': '#0b3d51'\n                  }\n                },\n                {\n                  'featureType': 'local',\n                  'elementType': 'geometry',\n                  'stylers': {\n                    'color': '#000000'\n                  }\n                },\n                {\n                  'featureType': 'railway',\n                  'elementType': 'geometry.fill',\n                  'stylers': {\n                    'color': '#000000'\n                  }\n                },\n                {\n                  'featureType': 'railway',\n                  'elementType': 'geometry.stroke',\n                  'stylers': {\n                    'color': '#08304b'\n                  }\n                },\n                {\n                  'featureType': 'subway',\n                  'elementType': 'geometry',\n                  'stylers': {\n                    'lightness': -70\n                  }\n                },\n                {\n                  'featureType': 'building',\n                  'elementType': 'geometry.fill',\n                  'stylers': {\n                    'color': '#000000'\n                  }\n                },\n                {\n                  'featureType': 'all',\n                  'elementType': 'labels.text.fill',\n                  'stylers': {\n                    'color': '#857f7f'\n                  }\n                },\n                {\n                  'featureType': 'all',\n                  'elementType': 'labels.text.stroke',\n                  'stylers': {\n                    'color': '#000000'\n                  }\n                },\n                {\n                  'featureType': 'building',\n                  'elementType': 'geometry',\n                  'stylers': {\n                    'color': '#022338'\n                  }\n                },\n                {\n                  'featureType': 'green',\n                  'elementType': 'geometry',\n                  'stylers': {\n                    'color': '#062032'\n                  }\n                },\n                {\n                  'featureType': 'boundary',\n                  'elementType': 'all',\n                  'stylers': {\n                    'color': '#465b6c'\n                  }\n                },\n                {\n                  'featureType': 'manmade',\n                  'elementType': 'all',\n                  'stylers': {\n                    'color': '#022338'\n                  }\n                },\n                {\n                  'featureType': 'label',\n                  'elementType': 'all',\n                  'stylers': {\n                    'visibility': 'off'\n                  }\n                }\n              ]\n            }\n          },\n          series: [{\n            type: 'lines',\n            coordinateSystem: 'bmap',\n            polyline: true,\n            data: busLines,\n            silent: true,\n            lineStyle: {\n              normal: {\n                opacity: 0.2,\n                width: 1\n              }\n            },\n            progressiveThreshold: 500,\n            progressive: 200\n          }, {\n            type: 'lines',\n            coordinateSystem: 'bmap',\n            polyline: true,\n            data: busLines,\n            lineStyle: {\n              normal: {\n                width: 0\n              }\n            },\n            effect: {\n              constantSpeed: 20,\n              show: true,\n              trailLength: 0.1,\n              symbolSize: 1.5\n            },\n            zlevel: 1\n          }]\n        };\n      });\n  }\n\n}\n"},JgwV:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Population Density of HongKong (2011)</h4>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div echarts [options]="options" [loading]="!mapLoaded" class="demo-chart"></div>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '},Nvaw:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Official Demo (ECharts v3.8)</h4>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div echarts [options]="options" [merge]="mergeData" style="height: 600px;"></div>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '},OAZG:function(n,e,l){"use strict";l.r(e);var a=l("CcnG"),t=function(){},o=l("ujdH"),i=l("d+NZ"),u=l("vPfJ"),r=l("OQnT"),m=l("NEdW"),d=l("kBBU"),s=l("zk0r"),p=l("g5zm"),c=l("e7hY"),v=function(){function n(n,e){this.http=n,this.es=e,this.demo_html=l("JgwV"),this.demo_ts=l("fYvU"),this.mapLoaded=!1,this.options={}}return n.prototype.ngOnInit=function(){var n=this;this.http.get("assets/data/HK.json").subscribe(function(e){n.mapLoaded=!0,n.es.registerMap("HK",e),n.options={title:{text:"\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6 \uff082011\uff09",subtext:"\u4eba\u53e3\u5bc6\u5ea6\u6570\u636e\u6765\u81eaWikipedia",sublink:"http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12"},tooltip:{trigger:"item",formatter:"{b}<br/>{c} (p / km2)"},toolbox:{show:!0,orient:"vertical",left:"right",top:"center",feature:{dataView:{readOnly:!1},restore:{},saveAsImage:{}}},visualMap:{min:800,max:5e4,text:["High","Low"],realtime:!1,calculable:!0,inRange:{color:["lightskyblue","yellow","orangered"]}},series:[{name:"\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6",type:"map",mapType:"HK",itemStyle:{normal:{label:{show:!0}},emphasis:{label:{show:!0}}},data:[{name:"\u4e2d\u897f\u533a",value:20057.34},{name:"\u6e7e\u4ed4",value:15477.48},{name:"\u4e1c\u533a",value:31686.1},{name:"\u5357\u533a",value:6992.6},{name:"\u6cb9\u5c16\u65fa",value:44045.49},{name:"\u6df1\u6c34\u57d7",value:40689.64},{name:"\u4e5d\u9f99\u57ce",value:37659.78},{name:"\u9ec4\u5927\u4ed9",value:45180.97},{name:"\u89c2\u5858",value:55204.26},{name:"\u8475\u9752",value:21900.9},{name:"\u8343\u6e7e",value:4918.26},{name:"\u5c6f\u95e8",value:5881.84},{name:"\u5143\u6717",value:4178.01},{name:"\u5317\u533a",value:2227.92},{name:"\u5927\u57d4",value:2180.98},{name:"\u6c99\u7530",value:9172.94},{name:"\u897f\u8d21",value:3368},{name:"\u79bb\u5c9b",value:806.98}],nameMap:{"Central and Western":"\u4e2d\u897f\u533a",Eastern:"\u4e1c\u533a",Islands:"\u79bb\u5c9b","Kowloon City":"\u4e5d\u9f99\u57ce","Kwai Tsing":"\u8475\u9752","Kwun Tong":"\u89c2\u5858",North:"\u5317\u533a","Sai Kung":"\u897f\u8d21","Sha Tin":"\u6c99\u7530","Sham Shui Po":"\u6df1\u6c34\u57d7",Southern:"\u5357\u533a","Tai Po":"\u5927\u57d4","Tsuen Wan":"\u8343\u6e7e","Tuen Mun":"\u5c6f\u95e8","Wan Chai":"\u6e7e\u4ed4","Wong Tai Sin":"\u9ec4\u5927\u4ed9","Yau Tsim Mong":"\u6cb9\u5c16\u65fa","Yuen Long":"\u5143\u6717"}}]}})},n}(),g=l("t/Na"),h=a["\u0275crt"]({encapsulation:0,styles:[[""]],data:{}});function y(n){return a["\u0275vid"](0,[a["\u0275pid"](0,o.LanguagePipe,[]),(n()(),a["\u0275eld"](1,0,null,null,20,"div",[["class","card card-accent-info"]],null,null,null,null,null)),(n()(),a["\u0275eld"](2,0,null,null,19,"div",[["class","card-body"]],null,null,null,null,null)),(n()(),a["\u0275eld"](3,0,null,null,1,"h4",[["class","card-title"]],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,["Population Density of HongKong (2011)"])),(n()(),a["\u0275eld"](5,0,null,null,16,"div",[["class","mt-4"]],null,null,null,null,null)),(n()(),a["\u0275eld"](6,0,null,null,15,"tabset",[],[[2,"tab-container",null]],null,null,i.b,i.a)),a["\u0275did"](7,180224,null,0,u.a,[r.a,a.Renderer2],null,null),(n()(),a["\u0275eld"](8,0,null,0,3,"tab",[["heading","demo"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](9,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](10,0,null,null,1,"div",[["class","demo-chart"],["echarts",""]],null,[["window","resize"]],function(n,e,l){var t=!0;return"window:resize"===e&&(t=!1!==a["\u0275nov"](n,11).onWindowResize(l)&&t),t},null,null)),a["\u0275did"](11,933888,null,0,d.c,[a.ElementRef,a.NgZone],{options:[0,"options"],loading:[1,"loading"]},null),(n()(),a["\u0275eld"](12,0,null,0,4,"tab",[["heading","html"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](13,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](14,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](15,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](16,2),(n()(),a["\u0275eld"](17,0,null,0,4,"tab",[["heading","component"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](18,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](19,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](20,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](21,2)],function(n,e){var l=e.component;n(e,9,0,"demo"),n(e,11,0,l.options,!l.mapLoaded),n(e,13,0,"html"),n(e,15,0,a["\u0275unv"](e,15,0,n(e,16,0,a["\u0275nov"](e,0),l.demo_html,"html"))),n(e,18,0,"component"),n(e,20,0,a["\u0275unv"](e,20,0,n(e,21,0,a["\u0275nov"](e,0),l.demo_ts,"typescript")))},function(n,e){n(e,6,0,a["\u0275nov"](e,7).clazz),n(e,8,0,a["\u0275nov"](e,9).id,a["\u0275nov"](e,9).active,a["\u0275nov"](e,9).addClass),n(e,12,0,a["\u0275nov"](e,13).id,a["\u0275nov"](e,13).active,a["\u0275nov"](e,13).addClass),n(e,17,0,a["\u0275nov"](e,18).id,a["\u0275nov"](e,18).active,a["\u0275nov"](e,18).addClass)})}var f=a["\u0275ccf"]("app-hongkong-pd",v,function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"app-hongkong-pd",[],null,null,null,y,h)),a["\u0275did"](1,114688,null,0,v,[g.HttpClient,d.b],null,null)],function(n,e){n(e,1,0)},null)},{},{},[]),b='{\n  ...,\n  "scripts": [\n    "../node_modules/echarts/dist/echarts.min.js",\n    "../node_modules/echarts/dist/extension/bmap.min.js",\n    ...\n  ],\n  ...\n}',T=function(){function n(n,e){this.http=n,this.es=e,this.demo_html=l("cfXg"),this.demo_ts=l("GndG"),this.demo_json=b,this.mapLoaded=!1,this.options={}}return n.prototype.ngOnInit=function(){var n=this;this.http.get("assets/data/lines-bus.json").subscribe(function(e){var l=300/(e.length-1),a=[].concat.apply([],e.map(function(e,a){for(var t,o=[],i=0;i<e.length;i+=2){var u=[e[i],e[i+1]];i>0&&(u=[t[0]+u[0],t[1]+u[1]]),t=u,o.push([u[0]/1e4,u[1]/1e4])}return{coords:o,lineStyle:{normal:{color:n.es.echarts.color.modifyHSL("#5A94DF",Math.round(l*a))}}}}));n.mapLoaded=!0,n.options={bmap:{center:[116.46,39.92],zoom:10,roam:!0,mapStyle:{styleJson:[{featureType:"water",elementType:"all",stylers:{color:"#031628"}},{featureType:"land",elementType:"geometry",stylers:{color:"#000102"}},{featureType:"highway",elementType:"all",stylers:{visibility:"off"}},{featureType:"arterial",elementType:"geometry.fill",stylers:{color:"#000000"}},{featureType:"arterial",elementType:"geometry.stroke",stylers:{color:"#0b3d51"}},{featureType:"local",elementType:"geometry",stylers:{color:"#000000"}},{featureType:"railway",elementType:"geometry.fill",stylers:{color:"#000000"}},{featureType:"railway",elementType:"geometry.stroke",stylers:{color:"#08304b"}},{featureType:"subway",elementType:"geometry",stylers:{lightness:-70}},{featureType:"building",elementType:"geometry.fill",stylers:{color:"#000000"}},{featureType:"all",elementType:"labels.text.fill",stylers:{color:"#857f7f"}},{featureType:"all",elementType:"labels.text.stroke",stylers:{color:"#000000"}},{featureType:"building",elementType:"geometry",stylers:{color:"#022338"}},{featureType:"green",elementType:"geometry",stylers:{color:"#062032"}},{featureType:"boundary",elementType:"all",stylers:{color:"#465b6c"}},{featureType:"manmade",elementType:"all",stylers:{color:"#022338"}},{featureType:"label",elementType:"all",stylers:{visibility:"off"}}]}},series:[{type:"lines",coordinateSystem:"bmap",polyline:!0,data:a,silent:!0,lineStyle:{normal:{opacity:.2,width:1}},progressiveThreshold:500,progressive:200},{type:"lines",coordinateSystem:"bmap",polyline:!0,data:a,lineStyle:{normal:{width:0}},effect:{constantSpeed:20,show:!0,trailLength:.1,symbolSize:1.5},zlevel:1}]}})},n}(),S=a["\u0275crt"]({encapsulation:0,styles:[[""]],data:{}});function _(n){return a["\u0275vid"](0,[a["\u0275pid"](0,o.LanguagePipe,[]),(n()(),a["\u0275eld"](1,0,null,null,34,"div",[["class","card card-accent-info"]],null,null,null,null,null)),(n()(),a["\u0275eld"](2,0,null,null,33,"div",[["class","card-body"]],null,null,null,null,null)),(n()(),a["\u0275eld"](3,0,null,null,1,"h4",[["class","card-title"]],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,["Bus Lines of Beijing (Baidu Map)"])),(n()(),a["\u0275eld"](5,0,null,null,8,"div",[["class","alert alert-info"]],null,null,null,null,null)),(n()(),a["\u0275eld"](6,0,null,null,0,"i",[["class","fa fa-info mr-2"]],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,[" Need to include "])),(n()(),a["\u0275eld"](8,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,["bmap.js"])),(n()(),a["\u0275ted"](-1,null,[" and "])),(n()(),a["\u0275eld"](11,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,["Baidu Map"])),(n()(),a["\u0275ted"](-1,null,[" API: https://api.map.baidu.com/api?v=2.0&ak=ACCESS_KEY "])),(n()(),a["\u0275eld"](14,0,null,null,21,"div",[["class","mt-4"]],null,null,null,null,null)),(n()(),a["\u0275eld"](15,0,null,null,20,"tabset",[],[[2,"tab-container",null]],null,null,i.b,i.a)),a["\u0275did"](16,180224,null,0,u.a,[r.a,a.Renderer2],null,null),(n()(),a["\u0275eld"](17,0,null,0,3,"tab",[["heading","demo"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](18,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](19,0,null,null,1,"div",[["class","demo-chart"],["echarts",""]],null,[["window","resize"]],function(n,e,l){var t=!0;return"window:resize"===e&&(t=!1!==a["\u0275nov"](n,20).onWindowResize(l)&&t),t},null,null)),a["\u0275did"](20,933888,null,0,d.c,[a.ElementRef,a.NgZone],{options:[0,"options"],loading:[1,"loading"]},null),(n()(),a["\u0275eld"](21,0,null,0,4,"tab",[["heading","angular-cli"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](22,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](23,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](24,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](25,2),(n()(),a["\u0275eld"](26,0,null,0,4,"tab",[["heading","html"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](27,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](28,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](29,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](30,2),(n()(),a["\u0275eld"](31,0,null,0,4,"tab",[["heading","component"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](32,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](33,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](34,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](35,2)],function(n,e){var l=e.component;n(e,18,0,"demo"),n(e,20,0,l.options,!l.mapLoaded),n(e,22,0,"angular-cli"),n(e,24,0,a["\u0275unv"](e,24,0,n(e,25,0,a["\u0275nov"](e,0),l.demo_json,"javascript"))),n(e,27,0,"html"),n(e,29,0,a["\u0275unv"](e,29,0,n(e,30,0,a["\u0275nov"](e,0),l.demo_html,"html"))),n(e,32,0,"component"),n(e,34,0,a["\u0275unv"](e,34,0,n(e,35,0,a["\u0275nov"](e,0),l.demo_ts,"typescript")))},function(n,e){n(e,15,0,a["\u0275nov"](e,16).clazz),n(e,17,0,a["\u0275nov"](e,18).id,a["\u0275nov"](e,18).active,a["\u0275nov"](e,18).addClass),n(e,21,0,a["\u0275nov"](e,22).id,a["\u0275nov"](e,22).active,a["\u0275nov"](e,22).addClass),n(e,26,0,a["\u0275nov"](e,27).id,a["\u0275nov"](e,27).active,a["\u0275nov"](e,27).addClass),n(e,31,0,a["\u0275nov"](e,32).id,a["\u0275nov"](e,32).active,a["\u0275nov"](e,32).addClass)})}var w=a["\u0275ccf"]("app-bus-line",T,function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"app-bus-line",[],null,null,null,_,S)),a["\u0275did"](1,114688,null,0,T,[g.HttpClient,d.b],null,null)],function(n,e){n(e,1,0)},null)},{},{},[]),k=function(){function n(){this.demo_html=l("Nvaw"),this.demo_ts=l("XE6o"),this.options=E,this.mergeData=null}return n.prototype.ngOnInit=function(){E.series[0].data=[C],E.series[1].data=[R],this.mergeData={series:E.series}},n}(),E={tooltip:{trigger:"item",triggerOn:"mousemove"},legend:{top:"2%",left:"3%",orient:"vertical",data:[{name:"tree1",icon:"rectangle"},{name:"tree2",icon:"rectangle"}],borderColor:"#c23531"},series:[{type:"tree",name:"tree1",data:[],top:"5%",left:"7%",bottom:"2%",right:"60%",symbolSize:7,label:{normal:{position:"left",verticalAlign:"middle",align:"right"}},leaves:{label:{normal:{position:"right",verticalAlign:"middle",align:"left"}}},expandAndCollapse:!0,animationDuration:550,animationDurationUpdate:750},{type:"tree",name:"tree2",data:[],top:"20%",left:"60%",bottom:"22%",right:"18%",symbolSize:7,label:{normal:{position:"left",verticalAlign:"middle",align:"right"}},leaves:{label:{normal:{position:"right",verticalAlign:"middle",align:"left"}}},expandAndCollapse:!0,animationDuration:550,animationDurationUpdate:750}]},C={name:"flare",children:[{name:"data",children:[{name:"converters",children:[{name:"Converters",value:721},{name:"DelimitedTextConverter",value:4294}]},{name:"DataUtil",value:3322}]},{name:"display",children:[{name:"DirtySprite",value:8833},{name:"LineSprite",value:1732},{name:"RectSprite",value:3623}]},{name:"flex",children:[{name:"FlareVis",value:4116}]},{name:"query",children:[{name:"AggregateExpression",value:1616},{name:"And",value:1027},{name:"Arithmetic",value:3891},{name:"Average",value:891},{name:"BinaryExpression",value:2893},{name:"Comparison",value:5103},{name:"CompositeExpression",value:3677},{name:"Count",value:781},{name:"DateUtil",value:4141},{name:"Distinct",value:933},{name:"Expression",value:5130},{name:"ExpressionIterator",value:3617},{name:"Fn",value:3240},{name:"If",value:2732},{name:"IsA",value:2039},{name:"Literal",value:1214},{name:"Match",value:3748},{name:"Maximum",value:843},{name:"methods",children:[{name:"add",value:593},{name:"and",value:330},{name:"average",value:287},{name:"count",value:277},{name:"distinct",value:292},{name:"div",value:595},{name:"eq",value:594},{name:"fn",value:460},{name:"gt",value:603},{name:"gte",value:625},{name:"iff",value:748},{name:"isa",value:461},{name:"lt",value:597},{name:"lte",value:619},{name:"max",value:283},{name:"min",value:283},{name:"mod",value:591},{name:"mul",value:603},{name:"neq",value:599},{name:"not",value:386},{name:"or",value:323},{name:"orderby",value:307},{name:"range",value:772},{name:"select",value:296},{name:"stddev",value:363},{name:"sub",value:600},{name:"sum",value:280},{name:"update",value:307},{name:"variance",value:335},{name:"where",value:299},{name:"xor",value:354},{name:"_",value:264}]},{name:"Minimum",value:843},{name:"Not",value:1554},{name:"Or",value:970},{name:"Query",value:13896},{name:"Range",value:1594},{name:"StringUtil",value:4130},{name:"Sum",value:791},{name:"Variable",value:1124},{name:"Variance",value:1876},{name:"Xor",value:1101}]},{name:"scale",children:[{name:"IScaleMap",value:2105},{name:"LinearScale",value:1316},{name:"LogScale",value:3151},{name:"OrdinalScale",value:3770},{name:"QuantileScale",value:2435},{name:"QuantitativeScale",value:4839},{name:"RootScale",value:1756},{name:"Scale",value:4268},{name:"ScaleType",value:1821},{name:"TimeScale",value:5833}]}]},R={name:"flare",children:[{name:"flex",children:[{name:"FlareVis",value:4116}]},{name:"scale",children:[{name:"IScaleMap",value:2105},{name:"LinearScale",value:1316},{name:"LogScale",value:3151},{name:"OrdinalScale",value:3770},{name:"QuantileScale",value:2435},{name:"QuantitativeScale",value:4839},{name:"RootScale",value:1756},{name:"Scale",value:4268},{name:"ScaleType",value:1821},{name:"TimeScale",value:5833}]},{name:"display",children:[{name:"DirtySprite",value:8833}]}]},x=a["\u0275crt"]({encapsulation:0,styles:[[""]],data:{}});function M(n){return a["\u0275vid"](0,[a["\u0275pid"](0,o.LanguagePipe,[]),(n()(),a["\u0275eld"](1,0,null,null,20,"div",[["class","card card-accent-info"]],null,null,null,null,null)),(n()(),a["\u0275eld"](2,0,null,null,19,"div",[["class","card-body"]],null,null,null,null,null)),(n()(),a["\u0275eld"](3,0,null,null,1,"h4",[["class","card-title"]],null,null,null,null,null)),(n()(),a["\u0275ted"](-1,null,["Official Demo (ECharts v3.8)"])),(n()(),a["\u0275eld"](5,0,null,null,16,"div",[["class","mt-4"]],null,null,null,null,null)),(n()(),a["\u0275eld"](6,0,null,null,15,"tabset",[],[[2,"tab-container",null]],null,null,i.b,i.a)),a["\u0275did"](7,180224,null,0,u.a,[r.a,a.Renderer2],null,null),(n()(),a["\u0275eld"](8,0,null,0,3,"tab",[["heading","demo"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](9,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](10,0,null,null,1,"div",[["echarts",""],["style","height: 600px;"]],null,[["window","resize"]],function(n,e,l){var t=!0;return"window:resize"===e&&(t=!1!==a["\u0275nov"](n,11).onWindowResize(l)&&t),t},null,null)),a["\u0275did"](11,933888,null,0,d.c,[a.ElementRef,a.NgZone],{options:[0,"options"],merge:[1,"merge"]},null),(n()(),a["\u0275eld"](12,0,null,0,4,"tab",[["heading","html"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](13,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](14,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](15,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](16,2),(n()(),a["\u0275eld"](17,0,null,0,4,"tab",[["heading","component"]],[[1,"id",0],[2,"active",null],[2,"tab-pane",null]],null,null,null,null)),a["\u0275did"](18,212992,null,0,m.a,[u.a,a.ElementRef,a.Renderer2],{heading:[0,"heading"]},null),(n()(),a["\u0275eld"](19,0,null,null,2,"markdown",[],null,null,null,s.b,s.a)),a["\u0275did"](20,4243456,null,0,p.MarkdownComponent,[a.ElementRef,c.MarkdownService],{data:[0,"data"]},null),a["\u0275ppd"](21,2)],function(n,e){var l=e.component;n(e,9,0,"demo"),n(e,11,0,l.options,l.mergeData),n(e,13,0,"html"),n(e,15,0,a["\u0275unv"](e,15,0,n(e,16,0,a["\u0275nov"](e,0),l.demo_html,"html"))),n(e,18,0,"component"),n(e,20,0,a["\u0275unv"](e,20,0,n(e,21,0,a["\u0275nov"](e,0),l.demo_ts,"typescript")))},function(n,e){n(e,6,0,a["\u0275nov"](e,7).clazz),n(e,8,0,a["\u0275nov"](e,9).id,a["\u0275nov"](e,9).active,a["\u0275nov"](e,9).addClass),n(e,12,0,a["\u0275nov"](e,13).id,a["\u0275nov"](e,13).active,a["\u0275nov"](e,13).addClass),n(e,17,0,a["\u0275nov"](e,18).id,a["\u0275nov"](e,18).active,a["\u0275nov"](e,18).addClass)})}var O=a["\u0275ccf"]("app-official-demo",k,function(n){return a["\u0275vid"](0,[(n()(),a["\u0275eld"](0,0,null,null,1,"app-official-demo",[],null,null,null,M,x)),a["\u0275did"](1,114688,null,0,k,[],null,null)],function(n,e){n(e,1,0)},null)},{},{},[]),L=l("Ip0R"),A=l("fRkX"),D=l("ZYCi"),H={title:"Population Density of HongKong (2011)"},I={title:"Bus Lines of Beijing (Baidu Map)"},N={title:"Official Demo"},z=function(){},P=l("z+jS"),B=l("asSr"),j=l("7PmN");l.d(e,"DemoModuleNgFactory",function(){return F});var F=a["\u0275cmf"](t,[],function(n){return a["\u0275mod"]([a["\u0275mpd"](512,a.ComponentFactoryResolver,a["\u0275CodegenComponentFactoryResolver"],[[8,[f,w,O]],[3,a.ComponentFactoryResolver],a.NgModuleRef]),a["\u0275mpd"](4608,L.l,L.k,[a.LOCALE_ID,[2,L.p]]),a["\u0275mpd"](4608,g.HttpXsrfTokenExtractor,g["\u0275angular_packages_common_http_http_h"],[L.c,a.PLATFORM_ID,g["\u0275angular_packages_common_http_http_f"]]),a["\u0275mpd"](4608,g["\u0275angular_packages_common_http_http_i"],g["\u0275angular_packages_common_http_http_i"],[g.HttpXsrfTokenExtractor,g["\u0275angular_packages_common_http_http_g"]]),a["\u0275mpd"](5120,g.HTTP_INTERCEPTORS,function(n){return[n]},[g["\u0275angular_packages_common_http_http_i"]]),a["\u0275mpd"](4608,g["\u0275angular_packages_common_http_http_e"],g["\u0275angular_packages_common_http_http_e"],[]),a["\u0275mpd"](6144,g.XhrFactory,null,[g["\u0275angular_packages_common_http_http_e"]]),a["\u0275mpd"](4608,g.HttpXhrBackend,g.HttpXhrBackend,[g.XhrFactory]),a["\u0275mpd"](6144,g.HttpBackend,null,[g.HttpXhrBackend]),a["\u0275mpd"](4608,g.HttpHandler,g["\u0275angular_packages_common_http_http_c"],[g.HttpBackend,a.Injector]),a["\u0275mpd"](4608,g.HttpClient,g.HttpClient,[g.HttpHandler]),a["\u0275mpd"](4608,r.a,r.a,[]),a["\u0275mpd"](4608,c.MarkdownService,c.MarkdownService,[g.HttpClient,A.MarkedOptions]),a["\u0275mpd"](1073742336,L.b,L.b,[]),a["\u0275mpd"](1073742336,D.o,D.o,[[2,D.t],[2,D.l]]),a["\u0275mpd"](1073742336,z,z,[]),a["\u0275mpd"](1073742336,d.a,d.a,[]),a["\u0275mpd"](1073742336,P.a,P.a,[]),a["\u0275mpd"](1073742336,g.HttpClientXsrfModule,g.HttpClientXsrfModule,[]),a["\u0275mpd"](1073742336,g.HttpClientModule,g.HttpClientModule,[]),a["\u0275mpd"](1073742336,B.MarkdownModule,B.MarkdownModule,[]),a["\u0275mpd"](1073742336,j.a,j.a,[]),a["\u0275mpd"](1073742336,t,t,[]),a["\u0275mpd"](1024,D.j,function(){return[[{path:"map/hongkong-pd",component:v,data:H},{path:"map/bus-lines-of-beijing",component:T,data:I},{path:"tree/official-demo",component:k,data:N}]]},[]),a["\u0275mpd"](256,g["\u0275angular_packages_common_http_http_f"],"XSRF-TOKEN",[]),a["\u0275mpd"](256,g["\u0275angular_packages_common_http_http_g"],"X-XSRF-TOKEN",[]),a["\u0275mpd"](256,A.MarkedOptions,{gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1},[])])})},XE6o:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-official-demo',\n  templateUrl: './official-demo.component.html',\n  styleUrls: ['./official-demo.component.scss']\n})\nexport class OfficialDemoComponent implements OnInit {\n  demo_html = require('!!html-loader!./official-demo.component.html');\n  demo_ts = require('!!raw-loader!./official-demo.component.ts');\n  options = TREE_OPTION;\n  mergeData = null;\n\n  constructor() { }\n\n  ngOnInit() {\n    TREE_OPTION.series[0].data = [TREE_DATA_1];\n    TREE_OPTION.series[1].data = [TREE_DATA_2];\n\n    this.mergeData = {\n      series: TREE_OPTION.series\n    };\n  }\n\n}\n\nconst TREE_OPTION = {\n  tooltip: {\n    trigger: 'item',\n    triggerOn: 'mousemove'\n  },\n  legend: {\n    top: '2%',\n    left: '3%',\n    orient: 'vertical',\n    data: [{\n      name: 'tree1',\n      icon: 'rectangle'\n    },\n    {\n      name: 'tree2',\n      icon: 'rectangle'\n    }],\n    borderColor: '#c23531'\n  },\n  series: [\n    {\n      type: 'tree',\n      name: 'tree1',\n      data: [],\n      top: '5%',\n      left: '7%',\n      bottom: '2%',\n      right: '60%',\n\n      symbolSize: 7,\n\n      label: {\n        normal: {\n          position: 'left',\n          verticalAlign: 'middle',\n          align: 'right'\n        }\n      },\n\n      leaves: {\n        label: {\n          normal: {\n            position: 'right',\n            verticalAlign: 'middle',\n            align: 'left'\n          }\n        }\n      },\n\n      expandAndCollapse: true,\n\n      animationDuration: 550,\n      animationDurationUpdate: 750\n\n    },\n    {\n      type: 'tree',\n      name: 'tree2',\n      data: [],\n      top: '20%',\n      left: '60%',\n      bottom: '22%',\n      right: '18%',\n\n      symbolSize: 7,\n\n      label: {\n        normal: {\n          position: 'left',\n          verticalAlign: 'middle',\n          align: 'right'\n        }\n      },\n\n      leaves: {\n        label: {\n          normal: {\n            position: 'right',\n            verticalAlign: 'middle',\n            align: 'left'\n          }\n        }\n      },\n\n      expandAndCollapse: true,\n      animationDuration: 550,\n      animationDurationUpdate: 750\n    }\n  ]\n};\n\nconst TREE_DATA_1 = {\n  'name': 'flare',\n  'children': [\n    {\n      'name': 'data',\n      'children': [\n        {\n          'name': 'converters',\n          'children': [\n            { 'name': 'Converters', 'value': 721 },\n            { 'name': 'DelimitedTextConverter', 'value': 4294 }\n          ]\n        },\n        {\n          'name': 'DataUtil',\n          'value': 3322\n        }\n      ]\n    },\n    {\n      'name': 'display',\n      'children': [\n        { 'name': 'DirtySprite', 'value': 8833 },\n        { 'name': 'LineSprite', 'value': 1732 },\n        { 'name': 'RectSprite', 'value': 3623 }\n      ]\n    },\n    {\n      'name': 'flex',\n      'children': [\n        { 'name': 'FlareVis', 'value': 4116 }\n      ]\n    },\n    {\n      'name': 'query',\n      'children': [\n        { 'name': 'AggregateExpression', 'value': 1616 },\n        { 'name': 'And', 'value': 1027 },\n        { 'name': 'Arithmetic', 'value': 3891 },\n        { 'name': 'Average', 'value': 891 },\n        { 'name': 'BinaryExpression', 'value': 2893 },\n        { 'name': 'Comparison', 'value': 5103 },\n        { 'name': 'CompositeExpression', 'value': 3677 },\n        { 'name': 'Count', 'value': 781 },\n        { 'name': 'DateUtil', 'value': 4141 },\n        { 'name': 'Distinct', 'value': 933 },\n        { 'name': 'Expression', 'value': 5130 },\n        { 'name': 'ExpressionIterator', 'value': 3617 },\n        { 'name': 'Fn', 'value': 3240 },\n        { 'name': 'If', 'value': 2732 },\n        { 'name': 'IsA', 'value': 2039 },\n        { 'name': 'Literal', 'value': 1214 },\n        { 'name': 'Match', 'value': 3748 },\n        { 'name': 'Maximum', 'value': 843 },\n        {\n          'name': 'methods',\n          'children': [\n            { 'name': 'add', 'value': 593 },\n            { 'name': 'and', 'value': 330 },\n            { 'name': 'average', 'value': 287 },\n            { 'name': 'count', 'value': 277 },\n            { 'name': 'distinct', 'value': 292 },\n            { 'name': 'div', 'value': 595 },\n            { 'name': 'eq', 'value': 594 },\n            { 'name': 'fn', 'value': 460 },\n            { 'name': 'gt', 'value': 603 },\n            { 'name': 'gte', 'value': 625 },\n            { 'name': 'iff', 'value': 748 },\n            { 'name': 'isa', 'value': 461 },\n            { 'name': 'lt', 'value': 597 },\n            { 'name': 'lte', 'value': 619 },\n            { 'name': 'max', 'value': 283 },\n            { 'name': 'min', 'value': 283 },\n            { 'name': 'mod', 'value': 591 },\n            { 'name': 'mul', 'value': 603 },\n            { 'name': 'neq', 'value': 599 },\n            { 'name': 'not', 'value': 386 },\n            { 'name': 'or', 'value': 323 },\n            { 'name': 'orderby', 'value': 307 },\n            { 'name': 'range', 'value': 772 },\n            { 'name': 'select', 'value': 296 },\n            { 'name': 'stddev', 'value': 363 },\n            { 'name': 'sub', 'value': 600 },\n            { 'name': 'sum', 'value': 280 },\n            { 'name': 'update', 'value': 307 },\n            { 'name': 'variance', 'value': 335 },\n            { 'name': 'where', 'value': 299 },\n            { 'name': 'xor', 'value': 354 },\n            { 'name': '_', 'value': 264 }\n          ]\n        },\n        { 'name': 'Minimum', 'value': 843 },\n        { 'name': 'Not', 'value': 1554 },\n        { 'name': 'Or', 'value': 970 },\n        { 'name': 'Query', 'value': 13896 },\n        { 'name': 'Range', 'value': 1594 },\n        { 'name': 'StringUtil', 'value': 4130 },\n        { 'name': 'Sum', 'value': 791 },\n        { 'name': 'Variable', 'value': 1124 },\n        { 'name': 'Variance', 'value': 1876 },\n        { 'name': 'Xor', 'value': 1101 }\n      ]\n    },\n    {\n      'name': 'scale',\n      'children': [\n        { 'name': 'IScaleMap', 'value': 2105 },\n        { 'name': 'LinearScale', 'value': 1316 },\n        { 'name': 'LogScale', 'value': 3151 },\n        { 'name': 'OrdinalScale', 'value': 3770 },\n        { 'name': 'QuantileScale', 'value': 2435 },\n        { 'name': 'QuantitativeScale', 'value': 4839 },\n        { 'name': 'RootScale', 'value': 1756 },\n        { 'name': 'Scale', 'value': 4268 },\n        { 'name': 'ScaleType', 'value': 1821 },\n        { 'name': 'TimeScale', 'value': 5833 }\n      ]\n    }\n  ]\n};\n\nconst TREE_DATA_2 = {\n  'name': 'flare',\n  'children': [\n    {\n      'name': 'flex',\n      'children': [\n        { 'name': 'FlareVis', 'value': 4116 }\n      ]\n    },\n    {\n      'name': 'scale',\n      'children': [\n        { 'name': 'IScaleMap', 'value': 2105 },\n        { 'name': 'LinearScale', 'value': 1316 },\n        { 'name': 'LogScale', 'value': 3151 },\n        { 'name': 'OrdinalScale', 'value': 3770 },\n        { 'name': 'QuantileScale', 'value': 2435 },\n        { 'name': 'QuantitativeScale', 'value': 4839 },\n        { 'name': 'RootScale', 'value': 1756 },\n        { 'name': 'Scale', 'value': 4268 },\n        { 'name': 'ScaleType', 'value': 1821 },\n        { 'name': 'TimeScale', 'value': 5833 }\n      ]\n    },\n    {\n      'name': 'display',\n      'children': [\n        { 'name': 'DirtySprite', 'value': 8833 }\n      ]\n    }\n  ]\n};\n\n\n"},cfXg:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Bus Lines of Beijing (Baidu Map)</h4>\n    <div class="alert alert-info"><i class="fa fa-info mr-2"></i> Need to include <strong>bmap.js</strong> and <strong>Baidu Map</strong> API: https://api.map.baidu.com/api?v=2.0&ak=ACCESS_KEY </div>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div echarts [options]="options" [loading]="!mapLoaded" class="demo-chart"></div>\n        </tab>\n        <tab heading="angular-cli">\n          <markdown [data]="demo_json | language: \'javascript\'"></markdown>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '},fYvU:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgxEchartsService } from 'ngx-echarts';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-hongkong-pd',\n  templateUrl: './hongkong-pd.component.html',\n  styleUrls: ['./hongkong-pd.component.scss']\n})\nexport class HongkongPdComponent implements OnInit {\n  demo_html = require('!!html-loader!./hongkong-pd.component.html');\n  demo_ts = require('!!raw-loader!./hongkong-pd.component.ts');\n\n  // show loading spinner:\n  mapLoaded = false;\n  // empty option before geoJSON loaded:\n  options = {};\n\n  constructor(private http: HttpClient, private es: NgxEchartsService) { }\n\n  ngOnInit() {\n    // fetch map geo JSON data from server\n    this.http.get('assets/data/HK.json')\n      .subscribe(geoJson => {\n        // hide loading:\n        this.mapLoaded = true;\n        // register map:\n        this.es.registerMap('HK', geoJson);\n        // update options:\n        this.options = {\n          title: {\n            text: '\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6 \uff082011\uff09',\n            subtext: '\u4eba\u53e3\u5bc6\u5ea6\u6570\u636e\u6765\u81eaWikipedia',\n            sublink: 'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: '{b}<br/>{c} (p / km2)'\n          },\n          toolbox: {\n            show: true,\n            orient: 'vertical',\n            left: 'right',\n            top: 'center',\n            feature: {\n              dataView: { readOnly: false },\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          visualMap: {\n            min: 800,\n            max: 50000,\n            text: ['High', 'Low'],\n            realtime: false,\n            calculable: true,\n            inRange: {\n              color: ['lightskyblue', 'yellow', 'orangered']\n            }\n          },\n          series: [\n            {\n              name: '\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6',\n              type: 'map',\n              mapType: 'HK', // map type should be registered\n              itemStyle: {\n                normal: { label: { show: true } },\n                emphasis: { label: { show: true } }\n              },\n              data: [\n                { name: '\u4e2d\u897f\u533a', value: 20057.34 },\n                { name: '\u6e7e\u4ed4', value: 15477.48 },\n                { name: '\u4e1c\u533a', value: 31686.1 },\n                { name: '\u5357\u533a', value: 6992.6 },\n                { name: '\u6cb9\u5c16\u65fa', value: 44045.49 },\n                { name: '\u6df1\u6c34\u57d7', value: 40689.64 },\n                { name: '\u4e5d\u9f99\u57ce', value: 37659.78 },\n                { name: '\u9ec4\u5927\u4ed9', value: 45180.97 },\n                { name: '\u89c2\u5858', value: 55204.26 },\n                { name: '\u8475\u9752', value: 21900.9 },\n                { name: '\u8343\u6e7e', value: 4918.26 },\n                { name: '\u5c6f\u95e8', value: 5881.84 },\n                { name: '\u5143\u6717', value: 4178.01 },\n                { name: '\u5317\u533a', value: 2227.92 },\n                { name: '\u5927\u57d4', value: 2180.98 },\n                { name: '\u6c99\u7530', value: 9172.94 },\n                { name: '\u897f\u8d21', value: 3368 },\n                { name: '\u79bb\u5c9b', value: 806.98 }\n              ],\n              nameMap: {\n                'Central and Western': '\u4e2d\u897f\u533a',\n                'Eastern': '\u4e1c\u533a',\n                'Islands': '\u79bb\u5c9b',\n                'Kowloon City': '\u4e5d\u9f99\u57ce',\n                'Kwai Tsing': '\u8475\u9752',\n                'Kwun Tong': '\u89c2\u5858',\n                'North': '\u5317\u533a',\n                'Sai Kung': '\u897f\u8d21',\n                'Sha Tin': '\u6c99\u7530',\n                'Sham Shui Po': '\u6df1\u6c34\u57d7',\n                'Southern': '\u5357\u533a',\n                'Tai Po': '\u5927\u57d4',\n                'Tsuen Wan': '\u8343\u6e7e',\n                'Tuen Mun': '\u5c6f\u95e8',\n                'Wan Chai': '\u6e7e\u4ed4',\n                'Wong Tai Sin': '\u9ec4\u5927\u4ed9',\n                'Yau Tsim Mong': '\u6cb9\u5c16\u65fa',\n                'Yuen Long': '\u5143\u6717'\n              }\n            }\n          ]\n        };\n      });\n  }\n\n}\n"}}]);